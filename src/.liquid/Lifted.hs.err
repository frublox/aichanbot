{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":13,"endLine":13,"endCol":21,"startCol":15,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"forall a##xo . (GHC.Types.IO a##xo) -> b##xo a##xo"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":34,"startCol":24,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"{VV : forall a##xo .\n      (GHC.Conc.Sync.TVar a##xo) -> (GHC.Types.IO a##xo) | VV == readTVarIO}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["Lifted.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":34,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["lq_anf$##7205759403792798855","(GHC.Conc.Sync.TVar a##xo) -> (GHC.Types.IO a##xo)"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":21,"startCol":15,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"forall a##xo . (GHC.Types.IO a##xo) -> b##xo a##xo"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":12,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["Lifted.atomicallyL","forall a##xo b##xo .\n(Control.Monad.IO.Class.MonadIO<[]> a##xo) =>\n(GHC.Conc.Sync.STM b##xo) -> a##xo b##xo"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":34,"startCol":24,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"{VV : forall a##xo .\n      (GHC.Conc.Sync.STM a##xo) -> (GHC.Types.IO a##xo) | VV == atomically}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":34,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["lq_anf$##7205759403792798853","(GHC.Conc.Sync.STM a##xo) -> (GHC.Types.IO a##xo)"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":12,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["Lifted.readTVarIOL","forall a##xo b##xo .\n(Control.Monad.IO.Class.MonadIO<[]> a##xo) =>\n(GHC.Conc.Sync.TVar b##xo) -> a##xo b##xo"]]]],"o_templs":[[{"spanInfo":{"startLine":13,"endLine":13,"endCol":21,"startCol":15,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"forall a##a1l7 .\nlq_tmp$x##11:(GHC.Types.IO a##a1l7) -> io##a1kX a##a1l7"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":34,"startCol":24,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"{VV : forall a##a1lb .\n      lq_tmp$x##498:(GHC.Conc.Sync.TVar a##a1lb) -> (GHC.Types.IO a##a1lb) | VV == GHC.Conc.Sync.readTVarIO}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["Lifted.$trModule","{VV##564 : GHC.Types.Module | $k_##565}"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":34,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["lq_anf$##7205759403792798855","lq_tmp$x##498:(GHC.Conc.Sync.TVar {lq_tmp$x##501 : a##a1kY | $k_##500[VV##499:=lq_tmp$x##501]}) -> (GHC.Types.IO {lq_tmp$x##501 : a##a1kY | $k_##500[VV##499:=lq_tmp$x##501]})"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":21,"startCol":15,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"forall a##a1l7 .\nlq_tmp$x##11:(GHC.Types.IO a##a1l7) -> io##a1le a##a1l7"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":12,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["Lifted.atomicallyL","forall io##a1le a##a1lf .\n(Control.Monad.IO.Class.MonadIO<[]> io##a1le) =>\nlq_tmp$x##383:(GHC.Conc.Sync.STM a##a1lf) -> io##a1le a##a1lf"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":34,"startCol":24,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[[null,"{VV : forall a##a1lo .\n      lq_tmp$x##407:(GHC.Conc.Sync.STM a##a1lo) -> (GHC.Types.IO a##a1lo) | VV == GHC.Conc.Sync.atomically}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":34,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["lq_anf$##7205759403792798853","lq_tmp$x##407:(GHC.Conc.Sync.STM {lq_tmp$x##410 : a##a1lf | $k_##409[VV##408:=lq_tmp$x##410]}) -> (GHC.Types.IO {lq_tmp$x##410 : a##a1lf | $k_##409[VV##408:=lq_tmp$x##410]})"]]],[{"spanInfo":{"startLine":13,"endLine":13,"endCol":12,"startCol":1,"filename":"C:\\Users\\lain\\Haskell\\aichanbot\\src\\Lifted.hs"},"realSpan":true},[["Lifted.readTVarIOL","forall io##a1kX a##a1kY .\n(Control.Monad.IO.Class.MonadIO<[]> io##a1kX) =>\nlq_tmp$x##474:(GHC.Conc.Sync.TVar a##a1kY) -> io##a1kX a##a1kY"]]]],"o_bots":[],"o_result":{"tag":"Crash","contents":[[],":1:1-1:1: Error\n  Constraint with free vars\n  17\n  [p]\n  Try using the --prune-unsorted flag\n:1:1-1:1: Error\n  Constraint with free vars\n  18\n  [p]\n  Try using the --prune-unsorted flag\n:1:1-1:1: Error\n  Constraint with free vars\n  36\n  [p]\n  Try using the --prune-unsorted flag\n:1:1-1:1: Error\n  Constraint with free vars\n  37\n  [p]\n  Try using the --prune-unsorted flag"]}}